
SIMPLE THREAD-SAFE IN-MEMORY CACHE
——————————————————————————————————

HIGH-PERFORMANCE SCALABLE WEB APPLICATIONS OFTEN USE A DISTRIBUTED IN-MEMORY DATA CACHE IN FRONT OF
OR IN PLACE OF ROBUST PERSISTENTSTORAGE FOR SOME TASKS. IN JAVA APPLICATIONS IT IS VERY COMMON TO USE
IN MEMORY CACHE FOR BETTER PERFORMANCE.

CACHE: A CACHE IS AN AREA OF LOCAL MEMORY THAT HOLDS A COPY OF FREQUENTLY ACCESSED DATA THAT IS OTHERWISE
EXPENSIVE TO GET OR COMPUTE. EXAMPLES OF SUCH DATA INCLUDE A RESULT OF A QUERY TO A DATABASE, A DISK FILE
OR A REPORT.


IMPLEMENTATION CRITERIA OF THE CACHE
————————————————————————————————————


1. ITEMS WILL EXPIRE BASED ON A TIME TO LIVE PERIOD.

2. CACHE WILL KEEP MOST RECENTLY USED ITEMS IF YOU WILL TRY TO ADD MORE ITEMS THEN MAX SPECIFIED. (APACHE
COMMON COLLECTIONS HAS A LRUMAP, WHICH, REMOVES THE LEAST USED ENTRIES FROM A FIXED SIZED MAP)

3. FOR THE EXPIRATION OF ITEMS WE CAN TIMESTAMP THE LAST ACCESS AND IN A SEPARATE THREAD REMOVE THE ITEMS
WHEN THE TIME TO LIVE LIMIT IS REACHED. THIS IS NICE FOR REDUCING MEMORY PRESSURE FOR APPLICATIONS THAT HAVE
LONG IDLE TIME IN BETWEEN ACCESSING THE CACHED OBJECTS.

